---
- name: Ensure workshop folder {{ ec2_name_prefix }} exists
  ansible.builtin.file:
    path: "{{ output_dir }}"
    state: directory

- name: Download manifest.zip
  when:
    - manifest_download_url is defined
  block:
    - name: Enforce use of user/password for manifest download
      ansible.builtin.assert:
        that:
          - manifest_download_url.startswith('https://')
#          - manifest_download_user is defined
#          - manifest_download_password is defined
          - redhat_username is defined
          - redhat_password is defined
        fail_msg: >-
          manifest_download_url must be secure and requires redhat_username
          and manifest_download_password.

    - name: Download manifest.zip
      ansible.builtin.get_url:
        url: "{{ manifest_download_url }}"
        dest: "{{ playbook_dir }}/manifest.zip"
        username: "{{ redhat_username }}"
        password: "{{ redhat_password }}"
        force_basic_auth: true

- name: Check license block
  block:
    - name: Check that the manifest.zip exists
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/manifest.zip"
      register: manifest_result
    - ansible.builtin.fail:
        msg: "Need a manifest file at {{ playbook_dir }}/manifest.zip"
      when:
        - not manifest_result.stat.exists
  rescue:
    - name: Checking for base64_manifest since no manifest.zip found
      ansible.builtin.debug:
        msg: Checking for variable base64_manifest
    - name: fail if there is also no base64_manifest
      ansible.builtin.fail:
        msg: no manifest.zip file found and no base64_manifest variable found
      when: base64_manifest is not defined
    - name: Rescue worked, base64 var found
      ansible.builtin.debug:
        msg: The variable base64_manifest was located
